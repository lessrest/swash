@import url("https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&display=swap");

* {
  box-sizing: border-box;
  margin: 0;
}

body {
  font-family: "DM Sans", sans-serif;
  font-optical-sizing: auto;
  background-color: black;
  color: #ffc;
  transition: background-color 0.5s ease-in, color 0.5s ease-in;
  min-height: 100vh;
  padding: 0.75rem 0.75rem 0.75rem 0.75rem;
  font-size: 20px;
  line-height: 1.5;
}

body:not(.ok) {
  background-color: #555;
}

video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  filter: blur(2px) sepia(0) hue-rotate(0deg) saturate(1) contrast(0.8)
    brightness(0.5);
}

article {
  font-weight: 500;
}

ruby rt {
  font-size: 70%;
  padding: 0 0.25em;
}

:not(:hover) .hidden {
  display: none;
}

[data-task-name="drip"][data-task-state="finished"] p {
  opacity: 1;
}

.sentence,
.phrase {
  font-weight: 300;
  /* display: none; */
}

.sentence.ai {
  display: block;
  font-weight: 500;
  opacity: 1;
  margin-left: 1em;
  margin-bottom: 0.25em;
}

.word.terminator::after {
  /* make line break after this span */
  content: "";
  display: block;
  width: 100%;
}

p {
  margin-bottom: 0.25em;
  min-width: 1em;
  min-height: 1.5em;
  gap: 0.5em;
  white-space: pre-wrap;
}

section {
  border-left: 8px solid transparent;
  transition: border-left 0.25s ease-in-out;
}

section.working-1 {
  border-left: 8px solid #afa8;
}

section.working-2 {
  border-left: 8px solid #aff8;
}

:root.show-tasks task {
  border: 1px solid #aff3;
  border-radius: 4px;
  padding: 0 0.5em;
  display: inline-flex;
  align-items: flex-start;
  flex-direction: column;
  gap: 0.25em;
  margin: 0.25em 0.5em;
}

:root.show-tasks [data-task-state="started"] {
  box-shadow: 0 0 40px 0 #1555;
}

:root.show-tasks [data-task-state="finished"] {
  border-color: #a773;
  opacity: 0.8;
}

:root.show-tasks [data-task-state="failed"] {
  border-color: red;
  opacity: 0.8;
}

task > main:empty {
  display: none;
}

task > main {
  display: flex;
  flex-direction: column;
}

task > header {
  font-size: 75%;
  color: #aff7;
  display: none;
}

:root.show-tasks task > header {
  display: block;
}

.text p {
  transition: all 0.25s ease-in;
  font-weight: 400;
  opacity: 0.4;
}

.text.retranscribing p {
  font-weight: 400;
  animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

.text.did-retranscribe p {
  font-weight: 400;
  font-style: normal;
}

.text.enhancing p {
  font-weight: 500;
  animation: pulse 2s ease-in-out infinite;
}

.text.did-enhance p {
  font-weight: 500;
}
